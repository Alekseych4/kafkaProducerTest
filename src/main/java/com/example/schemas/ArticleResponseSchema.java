/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.schemas;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ArticleResponseSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4896681931720172532L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ArticleResponseSchema\",\"namespace\":\"com.example.schemas\",\"fields\":[{\"name\":\"article\",\"type\":{\"type\":\"record\",\"name\":\"ArticleSchema\",\"fields\":[{\"name\":\"uniqueArticleName\",\"type\":\"string\"},{\"name\":\"writerNickname\",\"type\":\"string\"},{\"name\":\"articleTitle\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"text\",\"type\":[\"null\",\"string\"],\"default\":null}]}},{\"name\":\"charactersWithSpaces\",\"type\":\"int\"},{\"name\":\"words\",\"type\":\"int\"},{\"name\":\"spaces\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ArticleResponseSchema> ENCODER =
      new BinaryMessageEncoder<ArticleResponseSchema>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ArticleResponseSchema> DECODER =
      new BinaryMessageDecoder<ArticleResponseSchema>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ArticleResponseSchema> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ArticleResponseSchema> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ArticleResponseSchema> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ArticleResponseSchema>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ArticleResponseSchema to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ArticleResponseSchema from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ArticleResponseSchema instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ArticleResponseSchema fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.example.schemas.ArticleSchema article;
  private int charactersWithSpaces;
  private int words;
  private int spaces;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ArticleResponseSchema() {}

  /**
   * All-args constructor.
   * @param article The new value for article
   * @param charactersWithSpaces The new value for charactersWithSpaces
   * @param words The new value for words
   * @param spaces The new value for spaces
   */
  public ArticleResponseSchema(com.example.schemas.ArticleSchema article, java.lang.Integer charactersWithSpaces, java.lang.Integer words, java.lang.Integer spaces) {
    this.article = article;
    this.charactersWithSpaces = charactersWithSpaces;
    this.words = words;
    this.spaces = spaces;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return article;
    case 1: return charactersWithSpaces;
    case 2: return words;
    case 3: return spaces;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: article = (com.example.schemas.ArticleSchema)value$; break;
    case 1: charactersWithSpaces = (java.lang.Integer)value$; break;
    case 2: words = (java.lang.Integer)value$; break;
    case 3: spaces = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'article' field.
   * @return The value of the 'article' field.
   */
  public com.example.schemas.ArticleSchema getArticle() {
    return article;
  }


  /**
   * Sets the value of the 'article' field.
   * @param value the value to set.
   */
  public void setArticle(com.example.schemas.ArticleSchema value) {
    this.article = value;
  }

  /**
   * Gets the value of the 'charactersWithSpaces' field.
   * @return The value of the 'charactersWithSpaces' field.
   */
  public int getCharactersWithSpaces() {
    return charactersWithSpaces;
  }


  /**
   * Sets the value of the 'charactersWithSpaces' field.
   * @param value the value to set.
   */
  public void setCharactersWithSpaces(int value) {
    this.charactersWithSpaces = value;
  }

  /**
   * Gets the value of the 'words' field.
   * @return The value of the 'words' field.
   */
  public int getWords() {
    return words;
  }


  /**
   * Sets the value of the 'words' field.
   * @param value the value to set.
   */
  public void setWords(int value) {
    this.words = value;
  }

  /**
   * Gets the value of the 'spaces' field.
   * @return The value of the 'spaces' field.
   */
  public int getSpaces() {
    return spaces;
  }


  /**
   * Sets the value of the 'spaces' field.
   * @param value the value to set.
   */
  public void setSpaces(int value) {
    this.spaces = value;
  }

  /**
   * Creates a new ArticleResponseSchema RecordBuilder.
   * @return A new ArticleResponseSchema RecordBuilder
   */
  public static com.example.schemas.ArticleResponseSchema.Builder newBuilder() {
    return new com.example.schemas.ArticleResponseSchema.Builder();
  }

  /**
   * Creates a new ArticleResponseSchema RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ArticleResponseSchema RecordBuilder
   */
  public static com.example.schemas.ArticleResponseSchema.Builder newBuilder(com.example.schemas.ArticleResponseSchema.Builder other) {
    if (other == null) {
      return new com.example.schemas.ArticleResponseSchema.Builder();
    } else {
      return new com.example.schemas.ArticleResponseSchema.Builder(other);
    }
  }

  /**
   * Creates a new ArticleResponseSchema RecordBuilder by copying an existing ArticleResponseSchema instance.
   * @param other The existing instance to copy.
   * @return A new ArticleResponseSchema RecordBuilder
   */
  public static com.example.schemas.ArticleResponseSchema.Builder newBuilder(com.example.schemas.ArticleResponseSchema other) {
    if (other == null) {
      return new com.example.schemas.ArticleResponseSchema.Builder();
    } else {
      return new com.example.schemas.ArticleResponseSchema.Builder(other);
    }
  }

  /**
   * RecordBuilder for ArticleResponseSchema instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ArticleResponseSchema>
    implements org.apache.avro.data.RecordBuilder<ArticleResponseSchema> {

    private com.example.schemas.ArticleSchema article;
    private com.example.schemas.ArticleSchema.Builder articleBuilder;
    private int charactersWithSpaces;
    private int words;
    private int spaces;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.schemas.ArticleResponseSchema.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.article)) {
        this.article = data().deepCopy(fields()[0].schema(), other.article);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasArticleBuilder()) {
        this.articleBuilder = com.example.schemas.ArticleSchema.newBuilder(other.getArticleBuilder());
      }
      if (isValidValue(fields()[1], other.charactersWithSpaces)) {
        this.charactersWithSpaces = data().deepCopy(fields()[1].schema(), other.charactersWithSpaces);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.words)) {
        this.words = data().deepCopy(fields()[2].schema(), other.words);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.spaces)) {
        this.spaces = data().deepCopy(fields()[3].schema(), other.spaces);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing ArticleResponseSchema instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.schemas.ArticleResponseSchema other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.article)) {
        this.article = data().deepCopy(fields()[0].schema(), other.article);
        fieldSetFlags()[0] = true;
      }
      this.articleBuilder = null;
      if (isValidValue(fields()[1], other.charactersWithSpaces)) {
        this.charactersWithSpaces = data().deepCopy(fields()[1].schema(), other.charactersWithSpaces);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.words)) {
        this.words = data().deepCopy(fields()[2].schema(), other.words);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.spaces)) {
        this.spaces = data().deepCopy(fields()[3].schema(), other.spaces);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'article' field.
      * @return The value.
      */
    public com.example.schemas.ArticleSchema getArticle() {
      return article;
    }


    /**
      * Sets the value of the 'article' field.
      * @param value The value of 'article'.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder setArticle(com.example.schemas.ArticleSchema value) {
      validate(fields()[0], value);
      this.articleBuilder = null;
      this.article = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'article' field has been set.
      * @return True if the 'article' field has been set, false otherwise.
      */
    public boolean hasArticle() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'article' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.example.schemas.ArticleSchema.Builder getArticleBuilder() {
      if (articleBuilder == null) {
        if (hasArticle()) {
          setArticleBuilder(com.example.schemas.ArticleSchema.newBuilder(article));
        } else {
          setArticleBuilder(com.example.schemas.ArticleSchema.newBuilder());
        }
      }
      return articleBuilder;
    }

    /**
     * Sets the Builder instance for the 'article' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.example.schemas.ArticleResponseSchema.Builder setArticleBuilder(com.example.schemas.ArticleSchema.Builder value) {
      clearArticle();
      articleBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'article' field has an active Builder instance
     * @return True if the 'article' field has an active Builder instance
     */
    public boolean hasArticleBuilder() {
      return articleBuilder != null;
    }

    /**
      * Clears the value of the 'article' field.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder clearArticle() {
      article = null;
      articleBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'charactersWithSpaces' field.
      * @return The value.
      */
    public int getCharactersWithSpaces() {
      return charactersWithSpaces;
    }


    /**
      * Sets the value of the 'charactersWithSpaces' field.
      * @param value The value of 'charactersWithSpaces'.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder setCharactersWithSpaces(int value) {
      validate(fields()[1], value);
      this.charactersWithSpaces = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'charactersWithSpaces' field has been set.
      * @return True if the 'charactersWithSpaces' field has been set, false otherwise.
      */
    public boolean hasCharactersWithSpaces() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'charactersWithSpaces' field.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder clearCharactersWithSpaces() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'words' field.
      * @return The value.
      */
    public int getWords() {
      return words;
    }


    /**
      * Sets the value of the 'words' field.
      * @param value The value of 'words'.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder setWords(int value) {
      validate(fields()[2], value);
      this.words = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'words' field has been set.
      * @return True if the 'words' field has been set, false otherwise.
      */
    public boolean hasWords() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'words' field.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder clearWords() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'spaces' field.
      * @return The value.
      */
    public int getSpaces() {
      return spaces;
    }


    /**
      * Sets the value of the 'spaces' field.
      * @param value The value of 'spaces'.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder setSpaces(int value) {
      validate(fields()[3], value);
      this.spaces = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'spaces' field has been set.
      * @return True if the 'spaces' field has been set, false otherwise.
      */
    public boolean hasSpaces() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'spaces' field.
      * @return This builder.
      */
    public com.example.schemas.ArticleResponseSchema.Builder clearSpaces() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ArticleResponseSchema build() {
      try {
        ArticleResponseSchema record = new ArticleResponseSchema();
        if (articleBuilder != null) {
          try {
            record.article = this.articleBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("article"));
            throw e;
          }
        } else {
          record.article = fieldSetFlags()[0] ? this.article : (com.example.schemas.ArticleSchema) defaultValue(fields()[0]);
        }
        record.charactersWithSpaces = fieldSetFlags()[1] ? this.charactersWithSpaces : (java.lang.Integer) defaultValue(fields()[1]);
        record.words = fieldSetFlags()[2] ? this.words : (java.lang.Integer) defaultValue(fields()[2]);
        record.spaces = fieldSetFlags()[3] ? this.spaces : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ArticleResponseSchema>
    WRITER$ = (org.apache.avro.io.DatumWriter<ArticleResponseSchema>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ArticleResponseSchema>
    READER$ = (org.apache.avro.io.DatumReader<ArticleResponseSchema>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.article.customEncode(out);

    out.writeInt(this.charactersWithSpaces);

    out.writeInt(this.words);

    out.writeInt(this.spaces);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.article == null) {
        this.article = new com.example.schemas.ArticleSchema();
      }
      this.article.customDecode(in);

      this.charactersWithSpaces = in.readInt();

      this.words = in.readInt();

      this.spaces = in.readInt();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.article == null) {
            this.article = new com.example.schemas.ArticleSchema();
          }
          this.article.customDecode(in);
          break;

        case 1:
          this.charactersWithSpaces = in.readInt();
          break;

        case 2:
          this.words = in.readInt();
          break;

        case 3:
          this.spaces = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










